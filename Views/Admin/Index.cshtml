@model List<(IntranetDocumentos.Models.ApplicationUser user, IList<string> roles)>
@{
    ViewData["Title"] = "Administração de Usuários";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 style="color: var(--primary-color);">
            <i class="bi bi-gear" style="color: var(--secondary-color);"></i> 
            Administração de Usuários
        </h2>
        <p class="text-muted mb-0">Gerencie usuários e permissões do sistema</p>
    </div>
    <div>
        <a asp-action="CreateUser" class="btn btn-success shadow-sm me-2">
            <i class="bi bi-person-plus"></i> Novo Usuário
        </a>
        <a asp-action="SendEmail" class="btn btn-primary shadow-sm me-2">
            <i class="bi bi-envelope"></i> Enviar Email
        </a>
        <a asp-action="EmailConfig" class="btn btn-warning shadow-sm me-2">
            <i class="bi bi-gear"></i> Config. Email
        </a>
        <a asp-action="Departments" class="btn btn-info shadow-sm">
            <i class="bi bi-building"></i> Departamentos
        </a>
    </div>
</div>

<!-- Cards de Status -->
<div class="row mb-4">
    <div class="col-md-3">
        <div class="card bg-light">
            <div class="card-body text-center">
                <i class="bi bi-people-fill text-primary" style="font-size: 2rem;"></i>
                <h5 class="mt-2">@Model.Count</h5>
                <small class="text-muted">Usuários Total</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-light">
            <div class="card-body text-center">
                <i class="bi bi-envelope-fill text-success" style="font-size: 2rem;"></i>
                <h5 class="mt-2">
                    @* Aqui pode ser implementado contagem de emails enviados *@
                    <a asp-action="SendEmail" class="text-decoration-none">Enviar</a>
                </h5>
                <small class="text-muted">Comunicação</small>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-light">
            <div class="card-body text-center">
                <i class="bi bi-gear-fill text-warning" style="font-size: 2rem;"></i>
                <h5 class="mt-2">
                    <a asp-action="EmailConfig" class="text-decoration-none">Config</a>
                </h5>
                <small class="text-muted">Email SMTP</small>
                <div id="emailStatus" class="mt-1">
                    <small class="text-warning">Verificando...</small>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="card bg-light">
            <div class="card-body text-center">
                <i class="bi bi-building-fill text-info" style="font-size: 2rem;"></i>
                <h5 class="mt-2">
                    <a asp-action="Departments" class="text-decoration-none">Gerenciar</a>
                </h5>
                <small class="text-muted">Departamentos</small>
            </div>
        </div>
    </div>
</div>

@if (Model.Count == 0)
{
    <div class="text-center py-5">
        <i class="bi bi-people" style="font-size: 3rem; color: #6c757d;"></i>
        <h4 class="text-muted mt-3">Nenhum usuário encontrado</h4>
        <p class="text-muted">Comece criando o primeiro usuário do sistema.</p>
        <a asp-action="CreateUser" class="btn btn-success">
            <i class="bi bi-person-plus"></i> Criar Usuário
        </a>
    </div>
}
else
{
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th><i class="bi bi-envelope"></i> Email</th>
                            <th><i class="bi bi-building"></i> Departamento</th>
                            <th><i class="bi bi-shield"></i> Função</th>
                            <th><i class="bi bi-calendar"></i> Criado em</th>
                            <th><i class="bi bi-gear"></i> Ações</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var (user, roles) in Model)
                        {
                            <tr>
                                <td>
                                    <i class="bi bi-person-circle"></i>
                                    @user.Email
                                    @if (user.EmailConfirmed)
                                    {
                                        <i class="bi bi-check-circle text-success" title="Email confirmado"></i>
                                    }
                                </td>
                                <td>
                                    <span class="badge bg-primary">@user.Department.Name</span>
                                </td>
                                <td>
                                    @if (roles.Any())
                                    {
                                        @foreach (var role in roles)
                                        {
                                            <span class="badge @GetRoleBadgeClass(role)">@role</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">Sem função</span>
                                    }
                                </td>
                                <td>@user.LockoutEnd?.ToString("dd/MM/yyyy") ?? "N/A"</td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <a asp-action="EditUser" asp-route-id="@user.Id" 
                                           class="btn btn-sm btn-outline-primary" title="Editar">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        @if (user.Email != "admin@intranet.com")
                                        {
                                            <button type="button" class="btn btn-sm btn-outline-danger" 
                                                    onclick="confirmDelete('@user.Id', '@user.Email')" 
                                                    title="Excluir">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}

<!-- Modal de confirmação de exclusão -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar Exclusão</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Tem certeza que deseja excluir o usuário <strong id="userEmail"></strong>?</p>
                <p class="text-danger"><small>Esta ação não pode ser desfeita e todos os documentos enviados por este usuário serão mantidos.</small></p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form id="deleteForm" method="post" asp-action="DeleteUser" class="d-inline">
                    <input type="hidden" id="userId" name="id" />
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash"></i> Excluir
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDelete(id, email) {
            document.getElementById('userId').value = id;
            document.getElementById('userEmail').textContent = email;
            var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        function showDeleteModal(userId, userEmail) {
            document.getElementById('deleteUserId').value = userId;
            document.getElementById('deleteUserEmail').textContent = userEmail;
            var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }

        // Verificar status do sistema de email
        $(document).ready(function() {
            $.get('@Url.Action("GetSystemStatus")', function(data) {
                if (data.success) {
                    var statusHtml = data.emailConfigured 
                        ? '<small class="text-success">✅ Configurado</small>'
                        : '<small class="text-danger">❌ Não configurado</small>';
                    $('#emailStatus').html(statusHtml);
                    
                    // Debug info no console
                    console.log('Status do sistema:', data);
                } else {
                    $('#emailStatus').html('<small class="text-danger">❌ Erro</small>');
                    console.error('Erro ao verificar status:', data.error);
                }
            }).fail(function() {
                $('#emailStatus').html('<small class="text-danger">❌ Erro de conexão</small>');
            });
        });
    </script>
}

@functions {
    private string GetRoleBadgeClass(string role)
    {
        return role switch
        {
            "Admin" => "bg-danger",
            "Gestor" => "bg-warning",
            "Usuario" => "bg-info",
            _ => "bg-secondary"
        };
    }
}
